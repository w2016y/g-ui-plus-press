import{_ as t,o as n,c as l,p as r,l as k,j as i,D as d,I as e,w as c,aR as _}from"./chunks/framework.D4moP2cU.js";const g="/g-ui-plus/assets/light_blue.BWCE6Q8I.png",u="/g-ui-plus/assets/light_green.69eyrWv_.png",E="/g-ui-plus/assets/dark_blue.DNQBw5m1.png",m="/g-ui-plus/assets/dark_green.0J9zs9hV.png",y={},a=s=>(r("data-v-83fe7e0d"),s=s(),k(),s),F={class:"box"},b=a(()=>i("img",{src:g,alt:"light_blue"},null,-1)),f=a(()=>i("img",{src:u,alt:"light_green"},null,-1)),C=a(()=>i("img",{src:E,alt:"dark_blue"},null,-1)),A=a(()=>i("img",{src:m,alt:"dark_green"},null,-1)),D=[b,f,C,A];function v(s,h){return n(),l("div",F,D)}const q=t(y,[["render",v],["__scopeId","data-v-83fe7e0d"]]),V=JSON.parse('{"title":"主题","description":"","frontmatter":{"title":"主题"},"headers":[],"relativePath":"components/theme/base.md","filePath":"components/theme/base.md","lastUpdated":1725847612000}'),B={name:"components/theme/base.md"},x=_(`<h1 id="主题" tabindex="-1">主题 <a class="header-anchor" href="#主题" aria-label="Permalink to &quot;主题&quot;">​</a></h1><p>Gui Plus 默认提供四套主题（浅色和深色两种背景，蓝色、绿城两个色调），通过 <code>setTheme</code> 方法来切换主题。</p><blockquote><p>默认浅色背景蓝色主题 <code>light-blue</code>。</p></blockquote><h3 id="更换主题" tabindex="-1">更换主题 <a class="header-anchor" href="#更换主题" aria-label="Permalink to &quot;更换主题&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在 APP.vue 中设置主题色</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">script setup lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ts&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { onMounted } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { setTheme } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;g-ui-plus&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onMounted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setTheme</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;light-green&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">script</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><h3 id="主题列表" tabindex="-1">主题列表 <a class="header-anchor" href="#主题列表" aria-label="Permalink to &quot;主题列表&quot;">​</a></h3><blockquote><p>主题名称为 <code>light-blue</code>、<code>light-green</code>、<code>dark-blue</code>、<code>dark-green</code>。</p></blockquote>`,7);function P(s,h,T,I,S,$){const p=q,o=d("ClientOnly");return n(),l("div",null,[x,e(o,null,{default:c(()=>[e(p)]),_:1})])}const w=t(B,[["render",P]]);export{V as __pageData,w as default};
